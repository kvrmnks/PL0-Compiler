PROG -> SUBPROG
SUBPROG -> CONST VARIABLE PROCEDURE STATEMENT
CONST -> CONST_ ;
CONST -> ^
CONST_ -> const CONST_DEF
CONST_ -> CONST_ , CONST_DEF
CONST_DEF -> ID = UINT @ down
UINT -> num
VARIABLE -> VARIABLE_ ;
VARIABLE -> ^
VARIABLE_ -> var ID @ down
VARIABLE_ -> VARIABLE_ , ID @ down
ID -> id
PROCEDURE -> PROCEDURE_
PROCEDURE -> ^
PROCEDURE_ -> PROCEDURE_ PROC_HEAD SUBPROG ;
PROCEDURE_ -> PROC_HEAD SUBPROG ;
PROC_HEAD -> procedure ID ; @ down
STATEMENT -> ASSIGN
STATEMENT -> COND
STATEMENT -> WHILE
STATEMENT -> CALL
STATEMENT -> READ
STATEMENT -> WRITE
STATEMENT -> COMP
STATEMENT -> ^
ASSIGN -> ID := EXPR
COMP -> COMP_BEGIN end
COMP_BEGIN -> begin STATEMENT
COMP_BEGIN -> COMP_BEGIN ; STATEMENT
CONDDITION -> EXPR REL EXPR
CONDDITION -> odd EXPR
EXPR -> PLUS_MINUS ITEM
EXPR -> EXPR PLUS_MINUS ITEM
EXPR -> ITEM
ITEM -> FACTOR
ITEM -> ITEM MUL_DIV FACTOR
FACTOR -> ID
FACTOR -> UINT
FACTOR -> ( EXPR )
PLUS_MINUS -> +
PLUS_MINUS -> -
MUL_DIV -> *
MUL_DIV -> /
REL -> =
REL -> #
REL -> <
REL -> <=
REL -> >
REL -> >=
COND -> if CONDDITION then STATEMENT
CALL -> call ID
WHILE -> while CONDDITION do STATEMENT
READ -> READ_BEGIN )
READ_BEGIN -> read ( ID
READ_BEGIN -> READ_BEGIN , ID
WRITE -> WRITE_BEGIN )
WRITE_BEGIN -> write ( ID
WRITE_BEGIN -> WRITE_BEGIN , ID
